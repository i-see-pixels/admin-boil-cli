name: Publish CLI to npm

on:
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/

      - name: Setup pnpm
        run: npm install -g pnpm@latest

      - name: Clean install dependencies
        run: |
          rm -rf node_modules 
          pnpm install

      - name: Check the version
        id: check
        run: |
          CURRENT_VERSION=$(jq -r .version package.json)
          echo "Current version: $CURRENT_VERSION"
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $LATEST_TAG"

          LATEST_VERSION=${LATEST_TAG#v}

          if [ "$LATEST_VERSION" != "$CURRENT_VERSION" ]; 
          then
            echo "Version changed"
            echo "version_changed=true" >> $GITHUB_OUTPUT
            echo "new_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          else
            echo "Version not changed"
            echo "version_changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Check if version is already published
        id: npm-check
        run: |
          PACKAGE_NAME=$(jq -r .name package.json)
          CURRENT_VERSION=$(jq -r .version package.json)
          PUBLISHED_VERSION=$(npm view $PACKAGE_NAME@${CURRENT_VERSION} version || echo "not_published")
          if [ "$PUBLISHED_VERSION" == "$CURRENT_VERSION" ]; then
            echo "Package version $CURRENT_VERSION is already published."
            echo "already_published=true" >> $GITHUB_OUTPUT
          else
            echo "Package version $CURRENT_VERSION is not published."
            echo "already_published=false" >> $GITHUB_OUTPUT
          fi

      - name: Build
        run: pnpm build
        if: steps.check.outputs.version_changed == 'true' && steps.npm-check.outputs.already_published == 'false'

      - name: Publish
        if: steps.check.outputs.version_changed == 'true' && steps.npm-check.outputs.already_published == 'false'
        run: npm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Tag release
        if: steps.check.outputs.version_changed == 'true' && steps.npm-check.outputs.already_published == 'false'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git tag -a "v${{ steps.check.outputs.new_version }}" -m "v${{ steps.check.outputs.new_version }}"
          git push origin "v${{ steps.check.outputs.new_version }}"
